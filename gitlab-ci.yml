image: node:latest

variables:
  # Configure server/src/mysql-pool.js
  MYSQL_HOST: localhost
  MYSQL_USER: test # Docker commands are run as root
  MYSQL_PASSWORD: test # Default root password is empty string
  MYSQL_DATABASE: test

stages:
  - build # Jobs placed in build stage will run first
  - test # Jobs placed in test stage will run after build-jobs

install:
  stage: build
  script:
    - cd server
    - npm install
    - cd ../client
    - npm install
  artifacts: # Keep node_modules folder for the following stages
    paths:
      - server/node_modules
      - client/node_modules

prettier:
  stage: test # The prettier job will run in parallel with the typescript and test jobs
  script:
    - cd server
    - ./node_modules/.bin/prettier --check src/* test/*
    - cd ../server
    - ./node_modules/.bin/prettier --check src/* test/*

typescript:
  stage: test # The typescript job will run in parallel with the typescript and test jobs
  script:
    - cd server
    - ./node_modules/.bin/tsc --noEmit
    - cd ../client
    - ./node_modules/.bin/tsc --noEmit
test:
  stage: test # The test job will run in parallel with the prettier and typescript jobs
  script:
    - apt-get update
    - apt-get -y upgrade
    - apt-get -y install default-mysql-server
    - service mariadb start
    - mysqladmin create $MYSQL_DATABASE
    # Create database tables
    - >
      echo "CREATE TABLE recipe(recipe_id INT NOT NULL AUTO_INCREMENT, name VARCHAR(50),  category
      VARCHAR(50), country VARCHAR(50), PRIMARY KEY(recipe_id));" | mysql $MYSQL_DATABASE
    - >
      echo "CREATE TABLE ingredient(ingredient_id INT NOT NULL AUTO_INCREMENT, name VARCHAR(50),
      PRIMARY KEY(ingredient_id));" | mysql $MYSQL_DATABASE
    - >
      echo "CREATE TABLE recipe_ingredient(ingredient_id INT NOT NULL, recipe_id INT NOT NULL,
      amount_per_person VARCHAR(50), measurement_unit VARCHAR(50), PRIMARY KEY(ingredient_id,
      recipe_id),  FOREIGN KEY(ingredient_id) REFERENCES ingredient(ingredient_id), FOREIGN
      KEY(recipe_id) REFERENCES recipe(recipe_id)  ON DELETE CASCADE);" | mysql $MYSQL_DATABASE
    - >
      echo "CREATE TABLE step(step_id INT NOT NULL AUTO_INCREMENT, order_number INT(2), description
      VARCHAR(500), recipe_id INT NOT NULL, PRIMARY KEY(step_id), FOREIGN KEY(recipe_id) REFERENCES
      recipe(recipe_id) ON DELETE CASCADE); " | mysql $MYSQL_DATABASE
    - >
      echo "CREATE TABLE user(user_id INT NOT NULL AUTO_INCREMENT, email VARCHAR(50), first_name
      VARCHAR(50), last_name VARCHAR(50), password VARCHAR(120), PRIMARY KEY(user_id));" | mysql
      $MYSQL_DATABASE
    - >
      echo "CREATE TABLE like_information(user_id INT NOT NULL, recipe_id INT NOT NULL, liked
      BOOLEAN,  PRIMARY KEY(user_id, recipe_id), FOREIGN KEY(user_id) REFERENCES user(user_id) ON
      DELETE CASCADE,  FOREIGN KEY(recipe_id) REFERENCES recipe(recipe_id) ON DELETE CASCADE );" |
      mysql $MYSQL_DATABASE
    - >
      echo "CREATE TABLE shopping_list(shopping_list_id INT NOT NULL AUTO_INCREMENT, recipe_id INT
      NOT NULL,  ingredient_id INT NOT NULL, user_id INT NOT NULL, amount INT, measurement_unit
      varchar(50),  PRIMARY KEY (shopping_list_id), FOREIGN KEY (recipe_id) REFERENCES
      recipe(recipe_id) ON DELETE CASCADE,  FOREIGN KEY (ingredient_id) REFERENCES
      ingredient(ingredient_id) ON DELETE CASCADE,  FOREIGN KEY (user_id) REFERENCES user(user_id)
      ON DELETE CASCADE ); " | mysql $MYSQL_DATABASE
    # Add test user and grant access, opprette alle tabellene her
    - >
      echo "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD'; GRANT ALL PRIVILEGES ON
      $MYSQL_DATABASE.* TO '$MYSQL_USER'@'%'; FLUSH PRIVILEGES;" | mysql
    - cd server
    - touch test/"config.ts"
    - echo "" > test/config.ts # Create empty config.ts to avoid error on npm test
    # Workaround for strange gitlab ci bug
    - export MYSQL_HOST=127.0.0.1
    - npm test
    - cd ../client
    - npm test
